1. Is JAVA a Pass by Value or a Pass by Reference programming language?
- Java is a Pass by value, let's me give an example: 

public class Test {
    public static void main(String[] args) {
        int a = 5;
        modify(a);
        System.out.println(a); 
    }

    public static void modify(int x) {
        x = 100; 
    }
}
=>> it will print out 5 

class Person {
    String name;
}

public class Test {
    public static void main(String[] args) {
        Person p = new Person();
        p.name = "Tuáº¥n";
        modifyObject(p);
        System.out.println(p.name); 
    }

    public static void modifyObject(Person obj) {
        obj.name = "Bob";
    }
}
=>> it will print out Bob 

Therefore, for primitive data, Java would just passes a copy of the value to the method, and for objects, Java passes a copy of the reference to the objject, not the real object.

2. After the call of swap(jungleDVD, cinderellaDVD) why does the title of these two
objects still remain?
Because the swap() method is exchanging the values of the title fields between the two objects, but it's not changing the object references themselves. So the jungleDVD and cinderellaDVD object references still point to the same objects in memory as before the swap() method call.

3. After the call of changeTitle(jungleDVD, cinderellaDVD.getTitle()) why is
the title of the JungleDVD changed?
Because the changeTitle() method is modifying the title field of the jungleDVD object directly using the setter method.

4. Write a toString() method for the DigitalVideoDisc class. What should be the return type of
this method?
The return type should be String
